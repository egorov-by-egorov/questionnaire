{"version":3,"sources":["containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.module.css","components/FinisfedQuiz/FinisfedQuiz.module.css","hoc/Layout/Layout.module.css","components/ActiveQuiz/AnswerList/AnswerList.module.css","hoc/Layout/Layout.js","components/ActiveQuiz/AnswerList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswerList/AnswerList.js","components/ActiveQuiz/ActiveQuiz.js","components/FinisfedQuiz/FinisfedQuiz.js","containers/Quiz/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","AnswerItem","cls","answerState","push","join","onClick","onAnswerItemClickHandler","answer","id","text","AnswerList","answers","map","index","key","ActiveQuiz","Question","question","answerActiveQuestionNumber","quizLength","FinisfedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetryHandler","Quiz","state","isFinished","rightAnswerId","answerId","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","QuizWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e48fce7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3MpZQ\",\"QuizWrapper\":\"Quiz_QuizWrapper__1jAIT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3ppgs\",\"Question\":\"ActiveQuiz_Question__23xg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3pOTq\",\"success\":\"AnswerItem_success__V4gzc\",\"error\":\"AnswerItem_error__32xV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinisfedQuiz\":\"FinisfedQuiz_FinisfedQuiz__3opRy\",\"success\":\"FinisfedQuiz_success__1S8N5\",\"error\":\"FinisfedQuiz_error__2bLnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1-8l-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerList\":\"AnswerList_AnswerList__3N4mk\"};","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css'\r\n\r\nclass Layout extends Component\r\n{\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem];\r\n\r\n    if (props.answerState) {\r\n        cls.push(classes[props.answerState]);\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerItemClickHandler(props.answer.id)}\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react'\r\nimport classes from './AnswerList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswerList = props => {\r\n\r\n    return (\r\n        <ul className={classes.AnswerList}>\r\n            { props.answers.map((answer, index) => {\r\n                return (\r\n                    <AnswerItem\r\n                        key={index}\r\n                        answer={answer}\r\n                        onAnswerItemClickHandler={props.onAnswerItemClickHandler}\r\n                        answerState={props.answerState ? props.answerState[answer.id] : null}\r\n                    />\r\n                )\r\n            }) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswerList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswerList from './AnswerList/AnswerList';\r\n\r\nconst ActiveQuiz = props => {\r\n\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>\r\n                        2.&nbsp;\r\n                    </strong>\r\n                    { props.question }\r\n                </span>\r\n                <small>{ props.answerActiveQuestionNumber } из { props.quizLength }</small>\r\n            </p>\r\n            <AnswerList\r\n                answers={ props.answers }\r\n                onAnswerItemClickHandler={props.onAnswerItemClickHandler}\r\n                answerState={props.answerState}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuiz;","import React from 'react'\r\nimport classes from './FinisfedQuiz.module.css'\r\n\r\nconst FinisfedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++;\r\n        }\r\n        return total;\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinisfedQuiz}>\r\n            <ul>\r\n\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ];\r\n\r\n                    return (\r\n                        <li\r\n                            key={index}\r\n                        >\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                })}\r\n\r\n            </ul>\r\n            <p>Правильно { successCount } из { props.quiz.length }</p>\r\n            <div>\r\n                <button onClick={props.onRetryHandler}>Повторить</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinisfedQuiz","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinisfedQuiz from \"../../components/FinisfedQuiz/FinisfedQuiz\";\r\n\r\nclass Quiz extends Component\r\n{\r\n    state = {\r\n        results: {},\r\n        isFinished: false,\r\n        answerActiveQuestionNumber: 0,\r\n        answerState: null,\r\n        quiz: [\r\n            {\r\n                id: 1,\r\n                question: 'Какого цвета небо?',\r\n                rightAnswerId: 3,\r\n                answers: [\r\n                    { text: 'Зеленый', id:1 },\r\n                    { text: 'Красный', id:2 },\r\n                    { text: 'Синий', id:3 },\r\n                    { text: 'Черный', id:4 }\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                question: 'В каком году основали Санкт-Петербург?',\r\n                rightAnswerId: 5,\r\n                answers: [\r\n                    { text: '1701', id:1 },\r\n                    { text: '1709', id:2 },\r\n                    { text: '2020', id:3 },\r\n                    { text: '1809', id:4 },\r\n                    { text: '1703', id:5 }\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                question: 'Какое животное говорит \"Idddiii Nahooooy\"?',\r\n                rightAnswerId: 4,\r\n                answers: [\r\n                    { text: 'Барсик', id:1 },\r\n                    { text: 'Тузик', id:2 },\r\n                    { text: 'Волк', id:3 },\r\n                    { text: 'Дядя Витя', id:4 },\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    onAnswerItemClickHandler = answerId => {\r\n\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if (this.state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = this.state.quiz[this.state.answerActiveQuestionNumber];\r\n        const results = this.state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n\r\n            this.setState({\r\n                answerState: {[answerId]: 'success'},\r\n                results\r\n            })\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (this.isQuizFinished()) {\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        answerActiveQuestionNumber: this.state.answerActiveQuestionNumber + 1,\r\n                        answerState: null\r\n                    })\r\n                }\r\n                window.clearTimeout(timeout);\r\n            }, 1000);\r\n\r\n        } else {\r\n            results[question.id] = 'error'\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'},\r\n                results\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    isQuizFinished () {\r\n        return this.state.answerActiveQuestionNumber + 1 === this.state.quiz.length\r\n    }\r\n\r\n    onRetryHandler = () => {\r\n        this.setState({\r\n            results: {},\r\n            isFinished: false,\r\n            answerActiveQuestionNumber: 0,\r\n            answerState: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответье на все вопросы</h1>\r\n                    {\r\n                        this.state.isFinished\r\n                            ? <FinisfedQuiz\r\n                                results={ this.state.results }\r\n                                quiz={ this.state.quiz }\r\n                                onRetryHandler={this.onRetryHandler}\r\n                            />\r\n                            : <ActiveQuiz\r\n                                answers={ this.state.quiz[ this.state.answerActiveQuestionNumber ].answers }\r\n                                question={ this.state.quiz[ this.state.answerActiveQuestionNumber ].question }\r\n                                onAnswerItemClickHandler={ this.onAnswerItemClickHandler }\r\n                                quizLength={ this.state.quiz.length }\r\n                                answerActiveQuestionNumber={ this.state.answerActiveQuestionNumber + 1  }\r\n                                answerState={this.state.answerState}\r\n                            />\r\n                    }\r\n\r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Quiz from \"./containers/Quiz/Quiz\";\r\n\r\nfunction App() {\r\n  return (\r\n      <Layout>\r\n          <Quiz/>\r\n      </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log)\r\nreportWebVitals();\r\n"],"sourceRoot":""}